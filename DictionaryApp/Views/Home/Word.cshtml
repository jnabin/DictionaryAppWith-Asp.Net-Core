@model IEnumerable<DictionaryApp.Models.Word>

@{
    ViewData["Title"] = "Word";
    string noun = "";
    string pro_noun = "";
}

<form id="searchWord">
    <div class="input-group">
        <div class="form-outline">
            <input type="search" id="wordName" class="form-control border-left-0 border-right-0 border-top-0" name="wordName" placeholder="search word" />
            <div id="livesearch" class="container text-light"></div>
        </div>
        <button onclick="showDetails()" type="button" class="btn btn-primary ml-1" data-toggle="modal" data-target="#wordDetailsModal">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form>
<hr />
<div class="container word-table">
    <h4 class="text-secondary">Word List (Total Words - <span class="totalWord">@Model.Count()</span>)</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Word
                </th>
                <th>
                    Noun
                </th>

                <th>
                    Pro-Noun
                </th>

                <th>
                    Marked
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)

            {
                noun = "";
                pro_noun = "";
                string newNoun = "";
                string newProNoun = "";
                if (item.nouns != null && item.nouns.Count() > 0)
                {
                    foreach (var nounItem in item.nouns)
                    {
                        noun += nounItem.NounMappingWord.text + ", ";
                    }
                    newNoun = noun.Substring(0, noun.Length - 2);
                }
                if (item.proNouns != null && item.proNouns.Count() > 0)
                {
                    foreach (var proNounItem in item.proNouns)
                    {
                        pro_noun += proNounItem.ProNounMappingWord.text + ", ";
                    }
                    newProNoun = pro_noun.Substring(0, pro_noun.Length - 2);
                }
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.text)
                    </td>
                    <td>
                        @newNoun
                    </td>
                    <td>
                        @newProNoun
                    </td>

                    <td>@item.Mark</td>

                    <td>

                        <a asp-action="Edit" asp-route-id="@item.WordId">Edit</a> |

                        <a asp-action="Details" asp-route-id="@item.WordId">Details</a> |

                        <a asp-action="Delete" asp-route-id="@item.WordId">Delete</a>

                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>



<div id="wordDetailsModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                
            </div>
            <div class="modal-footer enter-delete-button">

                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                
            </div>
        </div>
    </div>
</div>

<script>
    function showDetails() {
        var formData = new FormData();
        formData.append("value", $("#wordName").val());
        var value = $("#wordName").val();
        
        $.ajax({
            type: "POST",

            url: '/Home/getWordDetails',
            data: formData,
            processData: false,
            contentType: false
        }).done(function (response) {
            $("#wordName").val("");
            $(".modal-body").empty();
            $(".removeDel").remove();
                $('.modal-title').text("Word : " + value);
                if (response == "not found") {
                    $(".modal-body").append(`<p class="text-danger">Word not found</p>`)

                } else {

                    var nouns = response.nouns;
                    var proNouns = response.pronouns;
                    var sentence = response.sentencesa;

                    $(".modal-body").append(`<input type="hidden" id="wordId" value="${response.wordId}"/>`);
                    $(".enter-delete-button").append(`<button type="button" onclick="deleteWord()" class="btn btn-secondary removeDel" data-dismiss="modal">Delete</button>`);

                    $(".modal-body").append(`<div class="bg-secondary text-light text-center">Noun</div>`);
                   
                    if (nouns.length == 0) {
                        $(".modal-body").append(`<p class="m-2 text-danger">Noun not available</p>`);
                    } else {
                        $.each(nouns, function (index, value) {
                            $(".modal-body").append(`<ul class="m-2">`);
                            $(".modal-body").append(`<li class="text-secondary">${value}</li>`);
                            $(".modal-body").append(`</ul>`);
                        })
                    }
                    $(".modal-body").append(`<div class="bg-secondary text-light text-center">Pro-Noun</div>`);
                    if (proNouns.length == 0) {
                        $(".modal-body").append(`<p class="m-2 text-danger">Pro-Noun not available</p>`);
                    } else {
                        $(".modal-body").append(`<ul class="m-2">`);
                        $.each(proNouns, function (index, value) {
                            $(".modal-body").append(`<li class="text-secondary">${value}</li>`);
                        })
                        $(".modal-body").append(`</ul>`);
                    }
                    $(".modal-body").append(`<div class="bg-secondary text-light text-center">Sentence</div>`);
                    if (sentence.length == 0) {
                        $(".modal-body").append(`<p class="m-2 text-danger">Sentence not available</p>`);
                    } else {
                        $(".modal-body").append(`<ul class="m-2">`);
                        $.each(sentence, function (index, value) {

                            $(".modal-body").append(`<li class="text-secondary">${value}</li>`);
                        })
                        $(".modal-body").append(`</ul>`);
                    }

                }
            
        });
            
        
    }

    $('input[type=search]').on('input', function () {
       
        if (this.value.length  == 0) {
            $("#livesearch").empty();
        }
        if (this.value.length == 0) {
            $("#livesearch").empty();
            $("#livesearch").css("border", "0px");
            return;
        }
        $("#livesearch").empty();
        var formData = new FormData();
        formData.append("value", this.value );

        $.ajax({
            type: "POST",
            url: '/Home/SearchWord',
            data: formData,
            processData: false,
            contentType: false
        }).done(function (response) {
            var wordList = response.wordList;
            if (wordList.length == 0) {
                $("#livesearch").empty();
            }
            else {
                $.each(wordList, function (index, value) {
                    $("#livesearch").append(`<p class="text-light serchSuggetion" onclick="enterIntoSearchBox(this)">${value}</p>`);
                });
            }
           

        });
    });

    function deleteWord() {
        var formData = new FormData();
        formData.append("value", $("#wordId").val());

        $.ajax({
            type: "POST",
            url: '/Home/DeleteWord',
            data: formData,
            processData: false,
            contentType: false
        }).done(function (response) {
            if (response == "success") {
                var count = $(".totalWord").html();
              
                var updateCount = parseInt(count) - 1;
               
                $(".totalWord").html(updateCount);
               
            }
            
        });
    }
    function enterIntoSearchBox(text) {
        var TextInsideP = text.textContent;       
        $("#wordName").val(TextInsideP);
        $("#livesearch").empty();

    }
</script>
